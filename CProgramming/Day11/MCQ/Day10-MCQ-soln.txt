#include <stdio.h>
static int k;
void func(void);
int m;
int main(void)
{
    func();
    func();
    func();
    func();
    return 0;
}
void func(void)
{
    auto int i = 0;
    register int j = 0;
    i++; // 
    j++;
    k++;
    m++;
    printf("i=%d j=%d k=%d m=%d\t", i, j, k, m);
}
/*
#include <stdio.h>
static int k;
void func(void);
int m;
int main(void)
{
    func(); 
    func();
    func();
    func();
    return 0;
}
// first call 
void func(void)
{
    auto int i = 0;
    register int j = 0;
    i++; // i is incremented to 1 
    j++; // j is incrmented to 1 
    k++; // k is incremented from 0 to 1 ( static variable)
    m++; // m is also incrmented from 0 to 1 ( global variable)
    printf("i=%d j=%d k=%d m=%d\t", i, j, k, m);
    //                              1  1  1  1 

  // i , j  is destroyed as they are local to function gets destroyed        
  // k and m are not destroyed as static and global variables are destroyed
  // after completion of main 
}

//second call 
void func(void)
{
    auto int i = 0;
    register int j = 0;
    i++; // again i is incremented to 1 
    j++; // again j is incrmented to 1 
    k++; // k is incremented from 1 to 2 ( static variable)
    m++; // m is also incrmented from 1 to 2 ( global variable)
    printf("i=%d j=%d k=%d m=%d\t", i, j, k, m);
    //                              1  1  2  2 

  // i , j  is destroyed as they are local to function gets destroyed        
  // k and m are not destroyed as static and global variables are destroyed
  // after completion of main 
}

//Third call 
void func(void)
{
    auto int i = 0;
    register int j = 0;
    i++; // again i is incremented to 1 
    j++; // again j is incrmented to 1 
    k++; // k is incremented from 2 to 3 ( static variable)
    m++; // m is also incrmented from 2 to 3 ( global variable)
    printf("i=%d j=%d k=%d m=%d\t", i, j, k, m);
    //                              1  1  3  3 

  // i , j  is destroyed as they are local to function gets destroyed        
  // k and m are not destroyed as static and global variables are destroyed
  // after completion of main 
}

//fourth call 
void func(void)
{
    auto int i = 0;
    register int j = 0;
    i++; // again i is incremented to 1 
    j++; // again j is incrmented to 1 
    k++; // k is incremented from 3 to 4 ( static variable)
    m++; // m is also incrmented from 3 to 4 ( global variable)
    printf("i=%d j=%d k=%d m=%d\t", i, j, k, m);
    //                              1  1  4  4 

  // i , j  is destroyed as they are local to function gets destroyed        
  // k and m are not destroyed as static and global variables are destroyed
  // after completion of main 
}
// k and m are destroyed 
*/