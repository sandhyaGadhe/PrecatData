// #include <stdio.h>
// // pointer size => 4
// #define SIZE(arr) sizeof(arr) / sizeof(*arr);
// //{10, 20, 30}
// // 100 104 108
// void fun(int *arr, int n)
// {
//     // sizeof(*arr) => sizeof(valueat(base address ))=> 4
//     //  n = 3
//     int i;
//     *arr += *(arr + n - 1) += 10;
//     /*
//           =  *(arr + n - 1) += 10;

//           =  *(100 + 3 - 1) += 10;

//           =  *(100 + 2) += 10;

//           =  *(100 + 2 *4) += 10;

//           =  *(100 + 8) += 10;

//           =  *(108) += 10;

//           *(108) => 30
//           30 + 10 => 40 (value at address 108 is changed to 40 )

//         *arr += 40
//         *arr = *arr + 40
//              =  valueat(arr) + 40
//              =   10 + 40
//              = 50
//       //value at base address is changed to 50

//       // final array is 50 20 40
//     */
//     return;
// }
// void printArr(int *arr, int n)
// {
//     int i;
//     for (i = 0; i < n; ++i)
//         printf("%d ", arr[i]);
//     return;
// }
// int main(void)
// {
//     int arr[] = {10, 20, 30};
//     int size = SIZE(arr); // 3
//     //sizeof(arr) / sizeof(*arr);
//     //   12       /  4
//     //        3
//     fun(arr, size);//3 is passed to the function
//     //arr is the base address
//     printArr(arr, size);
//     // arr is passed to function (arr => name of array => base address)
//     // size => 3
//     return 0;
// }

//******************************************************************


//  #include <stdio.h>
//  int main(void)
//  {
//  int arr[] = {45, 23, 44, 21, 98, 67};
//  /*
//              45    23    44    21    98    67
//             100   104    108  112   116   120  124 (pointer pointing here) 

//            // (&arr + 1) => 124
//            // (int*) => scale as 4 bytes

// */

// int *ptr = (int*)(&arr+1);//ptr is pointing to 124
// printf("%d", *(ptr-3) + ptr[-5] - *(arr+2) );
// /*
//         *(ptr - 3)
//         *(124 - 3)
//         *(124 - 3 * 4)
//         *(124 - 12)
//         *(112)
//           21

//         ptr[-5]

//         *(ptr + -5)
//         *(ptr - 5)
//         *(124 - 5)
//         *(124 - 5 * 4)
//         *(124 - 20)
//         *(104)
//         23

//         *(arr+2)
//         *(100 + 2)
//         *(100 + 2 * 4)
//         *(100 + 8)
//         *(108)
//         44

//         21 + 23 - 44
//         44 - 44
//         0
// */

// return 0;
// }

//**************************************************************

// #include <stdio.h>
// void changeData(int *ptr) // ptr = 100
// {
//     //                                        1      2      3      4      5
//     // printf("\n\n\n %d %d %d %d %d\n\n\n",ptr[0],ptr[1],ptr[2],ptr[3],ptr[4]);
//     int index;
//     for (index = 8; index >= 0; index--)
//     {
//         //*(ptr + index) *= index + 1;
//         ptr[index] *= index + 1;
//     }

//     /*

//            1        2       3       4       5
//            100      104     108     112     116
//            [0]      [1]     [2]     [3]     [4]
//          ptr[0]    ptr[1]  ptr[2]  ptr[3]  ptr[4]

//         for (index = 8; index >= 0; index--)
//         {
//             //*(ptr + index) *= index + 1;
//             ptr[index]*= index + 1;
//         }

//          ptr = 100

//         index = 8
//         for (index = 8; index >= 0; index--)
//         {
//             //*(ptr + index) *= index + 1;
//             ptr[index]*= index + 1;
//             ptr[8]*= index + 1;
//         }
//         index = 7
//         for (index = 8; index >= 0; index--)
//         {
//             //*(ptr + index) *= index + 1;
//             ptr[index]*= index + 1;
//             ptr[7]*= index + 1;
//         }
//         index = 6
//         for (index = 8; index >= 0; index--)
//         {
//             //*(ptr + index) *= index + 1;
//             ptr[index]*= index + 1;
//             ptr[6]*= index + 1;
//         }
//         index = 5
//         for (index = 8; index >= 0; index--)
//         {
//             //*(ptr + index) *= index + 1;
//             //ptr[index]*= index + 1;
//             ptr[5]*= index + 1;
//         }
//         index = 4
//         for (index = 8; index >= 0; index--)
//         {
//             //*(ptr + index) *= index + 1;
//             //ptr[index]*= index + 1;
//             ptr[4]*= index + 1;
//                    =   4 + 1
//                    =   5
//             ptr[4] = ptr[4] * 5
//                    =   5 * 5
//                    =   25
//           ptr[4] is changed from 5 to 25
//         }

//         index = 3
//         for (index = 8; index >= 0; index--)
//         {
//             //*(ptr + index) *= index + 1;
//             //ptr[index]*= index + 1;
//             ptr[3]*= index + 1;
//                    =   3 + 1
//                    =   4
//             ptr[3] = ptr[3] * 4
//                    =   4 * 4
//                    =   16
//           ptr[3] is changed from 4 to 16
//         }

//         //index = 2
//         for (index = 8; index >= 0; index--)
//         {
//             //*(ptr + index) *= index + 1;
//             //ptr[index]*= index + 1;
//             ptr[2]*= index + 1;
//                    =   2 + 1
//                    =   3
//             ptr[2] = ptr[2] * 3
//                    =   3 * 3
//                    =   9
//           ptr[2] is changed from 3 to 9
//         }

//         //index = 1
//         for (index = 8; index >= 0; index--)
//         {
//             //*(ptr + index) *= index + 1;
//             //ptr[index]*= index + 1;
//             ptr[1]*= index + 1;
//                    =   1 + 1
//                    =   2
//             ptr[1] = ptr[1] * 2
//                    =   2 * 2
//                    =   4
//           ptr[1] is changed from 2 to 4
//         }

//         //index = 0
//         for (index = 8; index >= 0; index--)
//         {
//             //*(ptr + index) *= index + 1;
//             //ptr[index]*= index + 1;
//             ptr[0]*= index + 1;
//                    =   0 + 1
//                    =   1
//             ptr[0] = ptr[0] * 1
//                    =   1 * 1
//                    =   1
//           ptr[0] is 1
//         }
//                                             1      4     9      16     25
//     printf("\n\n\n %d %d %d %d %d\n\n\n",ptr[0],ptr[1],ptr[2],ptr[3],ptr[4]);
//     //Entire array is updated
//     */
//     return;
// }
// int main(void)
// {
//     int a[9] = {1, 2, 3, 4, 5};
//     /*
//         a

//             1        2       3       4       5
//            100      104     108     112     116
//            [0]      [1]     [2]     [3]     [4]
//          ptr[0]    ptr[1]  ptr[2]  ptr[3]  ptr[4]

//         *(a+1)
//         *(100 + 1 * 4)
//         *(100 + 4)
//         *(104)
//           2

//         *(a+3)
//         *(100 + 3 * 4)
//         *(100 + 12)
//         *(112)
//           4

//     */
//     printf("%d %d ", *(a + 1), *(a + 3));
//     //                  2    ,   4

//     changeData(a); // a is passed i.e base address

//     /*

//             1        4       9       16      25
//            100      104     108     112     116
//            [0]      [1]     [2]     [3]     [4]
//          ptr[0]    ptr[1]  ptr[2]  ptr[3]  ptr[4]

//     */
//     int *ptr = &a[4]; // &a[4] i.e 116

//     printf("%d %d ", ptr[-1], ptr[-3]);
//     //                  16       4
//     /*
//             ptr[-1]
//             *(ptr + -1)
//             *(ptr - 1)
//             *(116 - 1)
//             *(116 - 1 * 4)
//             *(116 - 4)
//             *(112)
//             16

//           ptr[-3]
//           *(ptr + -3)
//           *(ptr - 3)
//           *(116 - 3)
//           *(116 - 3 * 4)
//           *(116 - 12)
//           *104
//           4

//     */
//     return 0;
// }

//*************************************************************


// #include <stdio.h>
// void function_array(int *a, int size)
// {
//     //4[a] is same as a[4]
//     //*(&0 [a]) => a[0]
//     *(&0 [a]) = a[0] + 4 [a] / 10;
//   //   a[0]   =  10  + 50 / 10
//   //             10  + 5
//   //                15
//   //   a[0] is updated to 15

//     *(&1 [a]) = a[1] + 4 [a] / 10;
//   //   a[1]   =  20  + 50 / 10
//   //             20  + 5
//   //                25
//   //   a[1] is updated to 25

//     *(&2 [a]) = a[2] + 4 [a] / 10;
//     *(&3 [a]) = a[3] + 4 [a] / 10;
//     *(&4 [a]) = a[4] + 4 [a] / 10;
//     return;
// }
// int main(void)
// {
//     int arr[] = {10, 20, 30, 40, 50}, i;
//     function_array(arr, 5); // arr => name of array =>base address is passed , 5
//     for (i = 0; i < 5; i++)
//         printf(" %4d ", *(arr + i));
//     return 0;
// }

//**************************************************************

